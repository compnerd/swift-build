
steps:
  - script: |
      git config --global user.name 'builder'
      git config --global user.email 'builder@compnerd.org'

      git clone --quiet --depth 1 --single-branch https://github.com/apple/swift-llbuild llbuild
      call :ApplyPatches "%LLBUILD_PR%" llbuild

      git clone --quiet --depth 1 --single-branch https://github.com/apple/indexstore-db indexstore-db
      call :ApplyPatches "%INDEXSTOREDB_PR%" indexstore-db

      goto :eof

      :ApplyPatches
      setlocal
      set list=%~1
      set repository=%~2
      for /F "tokens=1*" %%P in ("%list%") do (
        git -C %repository% fetch origin pull/%%P/head
        git -C %repository% cherry-pick FETCH_HEAD
        if not "%%Q" == "" call :ApplyPatches "%%Q" %repository%
      )
      endlocal
      goto :eof
    displayName: 'Fetch Sources'
  # NOTE: use the Facebook builder results as that builds the SDK every hour
  - task: DownloadBuildArtifacts@0
    inputs:
      buildType: specific
      project: '3133d6ab-80a8-4996-ac4f-03df25cd3224'
      allowPartiallySucceededBuilds: true
      pipeline: 5
      artifactName: 'toolchain'
      downloadPath: '$(System.ArtifactsDirectory)'
    displayName: 'Install toolchain'
  - task: DownloadBuildArtifacts@0
    inputs:
      buildType: specific
      project: '3133d6ab-80a8-4996-ac4f-03df25cd3224'
      allowPartiallySucceededBuilds: true
      pipeline: 2
      artifactName: 'sdk-$(platform)-$(host)'
      downloadPath: '$(System.ArtifactsDirectory)'
    displayName: 'Install SDK'
  - task: DownloadBuildArtifacts@0
    inputs:
      buildType: specific
      project: '3133d6ab-80a8-4996-ac4f-03df25cd3224'
      allowPartiallySucceededBuilds: true
      pipeline: 12
      artifactName: 'sqlite-$(platform)-$(host)'
      downloadPath: '$(System.ArtifactsDirectory)'
    displayName: 'Install SQLite3'
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '2.7.x'
  - task: CMake@1
    inputs:
      workingDirectory: $(Build.StagingDirectory)/llbuild
      cmakeArgs: -G Ninja $(Build.SourcesDirectory)/llbuild -C $(Build.SourcesDirectory)/cmake/caches/$(platform)-$(arch).cmake -DSWIFT_WINDOWS_SDK=$(System.ArtifactsDirectory)/sdk-$(platform)-$(host)/Developer/Platforms/Windows.platform/Developer/SDKs/Windows.sdk -C $(Build.SourcesDirectory)/cmake/caches/$(platform)-$(arch)-swift-flags.cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=$(platform.directory)/Developer/SharedSupport/llbuild-$(llbuild.version)/usr -DLLBUILD_SUPPORT_BINDINGS=Swift -DSWIFT_SDK=$(System.ArtifactsDirectory)/sdk-$(platform)-$(host)/Developer/Platforms/$(platform).platform/Developer/SDKs/$(platform).sdk -DSQLite3_LIBRARY=$(sqlite.directory)/usr/lib/SQLite3.lib -DSQLite3_INCLUDE_DIR=$(sqlite.directory)/usr/include
    displayName: 'Configure llbuild'
  - task: CMake@1
    inputs:
      cmakeArgs: --build $(Build.StagingDirectory)/llbuild
    displayName: 'Build llbuild'
  - task: CMake@1
    inputs:
      cmakeArgs: --build $(Build.StagingDirectory)/llbuild --target install
    displayName: 'Install llbuild'
  - task: CMake@1
    inputs:
      workingDirectory: $(Build.StagingDirectory)/indexstore-db
      cmakeArgs: -G Ninja $(Build.SourcesDirectory)/indexstore-db -C $(Build.SourcesDirectory)/cmake/caches/$(platform)-$(arch).cmake -DSWIFT_WINDOWS_SDK=$(System.ArtifactsDirectory)/sdk-$(platform)-$(host)/Developer/Platforms/Windows.platform/Developer/SDKs/Windows.sdk -C $(Build.SourcesDirectory)/cmake/caches/$(platform)-$(arch)-swift-flags.cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=$(platform.directory)/Developer/SharedSupport/IndexStoreDB-$(IndexStoreDB.version)/usr -DBUILD_SHARED_LIBS=YES
    displayName: 'Configure IndexStoreDB'
  - task: CMake@1
    inputs:
      cmakeArgs: --build $(Build.StagingDirectory)/indexstore-db
    displayName: 'Build IndexStoreDB'
  - task: CMake@1
    inputs:
      cmakeArgs: --build $(Build.StagingDirectory)/indexstore-db --target install
    displayName: 'Install IndexStoreDB'
  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: $(Build.StagingDirectory)/Library
      artifactName: devtools
