jobs:
  - job: swift_${{ parameters.platform }}_sdk__all_deb
    variables:
      platform.directory: $(Build.StagingDirectory)/swift-${{ parameters.platform }}-sdk/Library/Developer/Platforms/${{ parameters.os }}.platform
      sdk.directory: $(platform.directory)/Developer/SDKs/${{ parameters.os }}.sdk
    steps:
      - download: current
        artifact: sdk-${{ parameters.platform }}-${{ parameters.host }}

      - script: |
          git config --global --add core.autocrlf false
          git config --global --add core.symlinks true
        condition: eq( variables['Agent.OS'], 'Windows_NT' )
        displayName: Enable symbolic links, disable line ending conversion

      - checkout: self
        displayName: checkout compnerd/swift-build

      - checkout: apple/llvm-project
        displayName: checkout apple/llvm-project

      - checkout: apple/swift
        displayName: checkout apple/swift

      - checkout: apple/swift-cmark
        displayName: checkout apple/swift-cmark
        path: s/toolchain/cmark

      - checkout: apple/swift-corelibs-libdispatch
        displayName: checkout apple/swift-corelibs-libdispatch

      - checkout: apple/swift-corelibs-foundation
        displayName: checkout apple/swift-corelibs-foundation

      - checkout: apple/swift-corelibs-xctest
        displayName: checkout apple/swift-corelibs-xctest

      - checkout: apple/swift-llbuild
        displayName: checkout apple/swift-llbuild
        path: s/llbuild

      - checkout: apple/swift-tools-support-core
        displayName: checkout apple/swift-tools-support-core
        path: s/tools-support-core

      - checkout: jpsim/Yams
        displayName: checkout jpsim/Yams
        path: s/Yams

      - checkout: apple/swift-package-manager
        displayName: checkout apple/swift-package-manager
        path: s/swiftpm

      - checkout: apple/indexstore-db
        displayName: checkout apple/indexstore-db

      - ${{ if eq(parameters.TENSORFLOW, true) }}:
        - checkout: tensorflow/swift-apis
          displayName: checkout tensorflow/swift-apis
          path: s/tensorflow-swift-apis

        - checkout: pvieito/PythonKit
          displayName: checkout pvieito/PythonKit

      - script: |
          mkdir -p $(Build.StagingDirectory)/swift-${{ parameters.platform }}-sdk
          rsync -v -a -l $(Pipeline.Workspace)/sdk-${{ parameters.platform }}-${{ parameters.host }}/Library $(Build.StagingDirectory)/swift-${{ parameters.platform }}-sdk

          # drop comments including the build tree layout
          sed -e '/sourceLocation/d' -i $(sdk.directory)/usr/lib/swift/${{ parameters.platform }}/${{ parameters.arch }}/glibc.modulemap

          # shuffle around the XCTest binaries
           mkdir -v -p $(platform.directory)/Developer/Library/XCTest-development/usr/lib/swift/${{ parameters.platform }}/${{ parameters.arch }}
           mv -v $(sdk.directory)/usr/lib/swift/${{ parameters.platform }}/${{ parameters.arch }}/XCTest.swift* $(platform.directory)/Developer/Library/XCTest-development/usr/lib/swift/${{ parameters.platform }}/${{ parameters.arch }}
           mv -v $(sdk.directory)/usr/lib/swift/${{ parameters.platform }}/*XCTest.* $(platform.directory)/Developer/Library/XCTest-development/usr/lib/swift/${{ parameters.platform }}

           # remove tools and documentation
           rm -rf $(sdk.directory)/usr/bin
           rm -rf $(sdk.directory)/usr/share
           rm -rf $(sdk.directory)/usr/lib/swift/FrameworkABIBaseline
        displayName: 'cleanup image'
      - script: |
          mkdir -p $(Build.StagingDirectory)/swift-${{ parameters.platform }}-sdk/DEBIAN
          sed -e "s/Version:/& $(Build.BuildId)/" $(Build.SourcesDirectory)/swift-build/debian/${{ parameters.platform }}-sdk > $(Build.StagingDirectory)/swift-${{ parameters.platform }}-sdk/DEBIAN/control

          cd $(Build.StagingDirectory)
          fakeroot dpkg-deb --build swift-${{ parameters.platform }}-sdk $(Build.StagingDirectory)
        displayName: 'package'
      - publish: $(Build.StagingDirectory)/swift-${{ parameters.platform }}-sdk_$(Build.BuildId)_all.deb
        artifact: swift-${{ parameters.platform }}-sdk_$(Build.BuildId)_all.deb
      - script: |
          cd $(Build.StagingDirectory)
          curl -F swift-${{ parameters.platform }}-sdk=@swift-${{ parameters.platform }}-sdk_$(Build.BuildId)_all.deb https://$(GEMFURY_PASSWORD)@push.fury.io/compnerd
        displayName: 'upload to gemfury'
