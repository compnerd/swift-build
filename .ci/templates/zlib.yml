jobs:
  - job: ${{ parameters.host }}
    variables:
      install.directory: $(Build.StagingDirectory)/zlib-${{ parameters.platform }}-${{ parameters.host }}/Library/zlib-$(zlib.version)
    steps:
      - checkout: self
      - checkout: madler/zlib
      - task: BatchScript@1
        inputs:
          filename: C:/Program Files (x86)/Microsoft Visual Studio/${{ parameters.VisualStudio }}/Common7/Tools/VsDevCmd.bat
          arguments: -no_logo -arch=${{ parameters.host }} -host_arch=x64
          modifyEnvironment: true
        condition: eq( variables['Agent.OS'], 'Windows_NT' )
        displayName: 'vsvarsall.bat'
      - script: |
          sudo apt-get -y install ninja-build
        condition: eq( variables['Agent.OS'], 'Linux' )
        displayName: 'Install Dependencies'
      - task: CMake@1
        inputs:
          workingDirectory: $(Build.BinariesDirectory)/zlib
          cmakeArgs: -C $(Build.SourcesDirectory)/swift-build/cmake/caches/${{ parameters.platform }}-${{ parameters.arch }}.cmake -G Ninja $(Build.SourcesDirectory)/zlib -DCMAKE_BUILD_TYPE=MinSizeRel -DCMAKE_INSTALL_PREFIX=$(install.directory)/usr -DBUILD_SHARED_LIBS=NO -DBUILD_TESTING=NO -DCMAKE_POSITION_INDEPENDENT_CODE=YES
        displayName: 'Configure zlib'
      - task: CMake@1
        inputs:
          cmakeArgs: --build $(Build.BinariesDirectory)/zlib
        displayName: 'Build zlib'
      - task: CMake@1
        inputs:
          cmakeArgs: --build $(Build.BinariesDirectory)/zlib --target install
        displayName: 'Install zlib'
      - publish: $(Build.StagingDirectory)/zlib-${{ parameters.platform }}-${{ parameters.host }}
        artifact: zlib-${{ parameters.platform }}-${{ parameters.host }}
