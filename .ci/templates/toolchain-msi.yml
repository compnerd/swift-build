jobs:
  - job: ${{ parameters.host }}
    # NOTE(compnerd) disable non-x64 builds as they are currently broken :(
    condition: eq( '${{ parameters.host }}', 'x64' )
    variables:
      toolchain.directory: $(Pipeline.Workspace)/toolchain-windows-${{ parameters.host }}/Library/Developer/Toolchains/unknown-Asserts-development.xctoolchain
    steps:
      - download: current
        artifact: toolchain-windows-${{ parameters.host }}

      - script: |
          git config --global --add core.autocrlf false
          git config --global --add core.symlinks true
        condition: eq( variables['Agent.OS'], 'Windows_NT' )
        displayName: Enable symbolic links, disable line ending conversion

      # The checkout list has to match with the windows-sdk.yml checkout list.
      # Otherwise Azure will create different directories for each build.
      - checkout: self
        displayName: checkout compnerd/swift-build

      - checkout: apple/llvm-project
        displayName: checkout apple/llvm-project
        path: s/toolchain

      - checkout: apple/swift
        displayName: checkout apple/swift
        path: s/toolchain/swift

      - checkout: apple/swift-cmark
        displayName: checkout apple/swift-cmark
        path: s/toolchain/cmark

      - checkout: apple/swift-corelibs-libdispatch
        displayName: checkout apple/swift-corelibs-libdispatch

      - checkout: apple/swift-corelibs-foundation
        displayName: checkout apple/swift-corelibs-foundation

      - checkout: apple/swift-corelibs-xctest
        displayName: checkout apple/swift-corelibs-xctest

      - checkout: apple/swift-llbuild
        displayName: checkout apple/swift-llbuild
        path: s/llbuild

      - checkout: apple/swift-tools-support-core
        displayName: checkout apple/swift-tools-support-core
        path: s/tools-support-core

      - checkout: jpsim/Yams
        displayName: checkout jpsim/Yams
        path: s/Yams

      - checkout: apple/swift-package-manager
        displayName: checkout apple/swift-package-manager
        path: s/swiftpm

      - checkout: apple/indexstore-db
        displayName: checkout apple/indexstore-db

      - ${{ if eq(parameters.TENSORFLOW, true) }}:
        - checkout: tensorflow/swift-apis
          displayName: checkout tensorflow/swift-apis
          path: s/tensorflow-swift-apis

        - checkout: pvieito/PythonKit
          displayName: checkout pvieito/PythonKit

      - task: BatchScript@1
        condition: eq( variables['Agent.OS'], 'Windows_NT' )
        displayName: VsDevCmd.bat
        inputs:
          filename: C:/Program Files (x86)/Microsoft Visual Studio/${{ parameters.VisualStudio }}/Common7/Tools/VsDevCmd.bat
          arguments: -no_logo -arch=x64 -host_arch=x64
          modifyEnvironment: true

      - ${{ if eq(parameters.VERSION, '5.2') }}:
        - task: MSBuild@1
          displayName: toolchain.msi
          inputs:
            solution: $(Build.SourcesDirectory)/swift-build/wix/windows-toolchain.wixproj
            msbuildArguments: /p:RunWixToolsOutOfProc=true -p:OutputPath=$(Build.BinariesDirectory)\toolchain-msi\ -p:IntermediateOutputPath=$(Build.BinariesDirectory)\toolchain-msi\ -p:TOOLCHAIN_ROOT=$(toolchain.directory) -p:INCLUDE_LLDB_PYTHON_SCRIPTS=false

      - ${{ if ne(parameters.VERSION, '5.2') }}:
        - task: MSBuild@1
          displayName: toolchain.msi
          inputs:
            solution: $(Build.SourcesDirectory)/swift-build/wix/windows-toolchain.wixproj
            msbuildArguments: /p:RunWixToolsOutOfProc=true -p:OutputPath=$(Build.BinariesDirectory)\toolchain-msi\ -p:IntermediateOutputPath=$(Build.BinariesDirectory)\toolchain-msi\ -p:TOOLCHAIN_ROOT=$(toolchain.directory) -p:INCLUDE_LLDB_PYTHON_SCRIPTS=true

      - publish: $(Build.BinariesDirectory)/toolchain-msi/toolchain.msi
        artifact: ${{ parameters.platform }}-toolchain-${{ parameters.proc }}.msi
