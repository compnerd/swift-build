jobs:
  - job: ${{ parameters.host }}
    # NOTE(compnerd) disable non-x64 builds as they are currently broken :(
    condition: eq( '${{ parameters.host }}', 'x64' )
    variables:
      toolchain.directory: $(Pipeline.Workspace)/toolchain-windows-${{ parameters.host }}/Library/Developer/Toolchains/unknown-Asserts-development.xctoolchain
      devtools.directory: $(Pipeline.Workspace)/devtools-windows-${{ parameters.host }}/Library/Developer/Toolchains/unknown-Asserts-development.xctoolchain

    steps:
      - ${{ if eq(parameters.USE_PREBUILT_TOOLCHAIN, true) }}:
        - task: DownloadPipelineArtifact@2
          displayName: download toolchain
          inputs:
            buildType: specific
            project: 3133d6ab-80a8-4996-ac4f-03df25cd3224
            definition: 7
            buildVersionToDownload: latest
            allowPartiallySucceededBuilds: true
            specificBuildWithTriggering: true
            artifact: toolchain-${{ parameters.platform }}-${{ parameters.host }}
            targetPath: $(Pipeline.Workspace)/toolchain-${{ parameters.platform }}-${{ parameters.host }}

        - task: DownloadPipelineArtifact@2
          displayName: download toolchain
          inputs:
            buildType: specific
            project: 3133d6ab-80a8-4996-ac4f-03df25cd3224
            definition: 7
            buildVersionToDownload: latest
            allowPartiallySucceededBuilds: true
            specificBuildWithTriggering: true
            artifact: devtools-${{ parameters.platform }}-${{ parameters.host }}
            targetPath: $(Pipeline.Workspace)/toolchain-${{ parameters.platform }}-${{ parameters.host }}

      - ${{ if not(eq(parameters.USE_PREBUILT_TOOLCHAIN, true)) }}:
        - download: current
          artifact: toolchain-windows-${{ parameters.host }}

        - download: current
          artifact: devtools-windows-${{ parameters.host }}

      - script: |
          git config --global --add core.autocrlf false
          git config --global --add core.symlinks true
        condition: eq( variables['Agent.OS'], 'Windows_NT' )
        displayName: Enable symbolic links, disable line ending conversion

      # The checkout list has to match with the windows-sdk.yml checkout list.
      # Otherwise Azure will create different directories for each build.
      - checkout: self
        displayName: checkout compnerd/swift-build

      - task: BatchScript@1
        condition: eq( variables['Agent.OS'], 'Windows_NT' )
        displayName: VsDevCmd.bat
        inputs:
          filename: C:/Program Files (x86)/Microsoft Visual Studio/${{ parameters.VisualStudio }}/Common7/Tools/VsDevCmd.bat
          arguments: -no_logo -arch=x64 -host_arch=x64
          modifyEnvironment: true

      - task: DownloadSecureFile@1
        name: certificate
        inputs:
          secureFile: dt.compnerd.org.p12

      - ${{ if eq(parameters.VERSION, '5.2') }}:
        - task: MSBuild@1
          displayName: toolchain.msi
          inputs:
            solution: $(Build.SourcesDirectory)/wix/windows-toolchain.wixproj
            msbuildArguments: /p:RunWixToolsOutOfProc=true -p:OutputPath=$(Build.BinariesDirectory)\toolchain-msi\ -p:IntermediateOutputPath=$(Build.BinariesDirectory)\toolchain-msi\ -p:TOOLCHAIN_ROOT=$(toolchain.directory) -p:INCLUDE_LLDB_PYTHON_SCRIPTS=false

      - ${{ if or(eq(parameters.VERSION, '5.3'), eq(parameters.VERSION, '5.4')) }}:
        - task: MSBuild@1
          displayName: toolchain.msi
          inputs:
            solution: $(Build.SourcesDirectory)/wix/windows-toolchain.wixproj
            msbuildArguments: /p:RunWixToolsOutOfProc=true -p:OutputPath=$(Build.BinariesDirectory)\toolchain-msi\ -p:IntermediateOutputPath=$(Build.BinariesDirectory)\toolchain-msi\ -p:TOOLCHAIN_ROOT=$(toolchain.directory) -p:INCLUDE_LLDB_PYTHON_SCRIPTS=true

      - ${{ if or(eq(parameters.VERSION, '5.5'), eq(parameters.VERSION, '5.6')) }}:
        - task: MSBuild@1
          displayName: toolchain.msi
          inputs:
            solution: $(Build.SourcesDirectory)/wix/windows-toolchain.wixproj
            msbuildArguments: /p:RunWixToolsOutOfProc=true -p:OutputPath=$(Build.BinariesDirectory)\toolchain-msi\ -p:IntermediateOutputPath=$(Build.BinariesDirectory)\toolchain-msi\ -p:TOOLCHAIN_ROOT=$(toolchain.directory) -p:INCLUDE_LLDB_PYTHON_SCRIPTS=true -p:HAVE__INTERNAL_SWIFT_SYNTAX_PARSER=true -p:HAVE__INTERNAL_SWIFT_SCAN=true

      - ${{ if and(ne(parameters.VERSION, '5.2'), ne(parameters.VERSION, '5.3'), ne(parameters.VERSION, '5.4'), ne(parameters.VERSION, '5.5'), ne(parameters.VERSION, '5.6')) }}:
        - task: MSBuild@1
          displayName: toolchain.msi
          inputs:
            solution: $(Build.SourcesDirectory)/wix/windows-toolchain.wixproj
            msbuildArguments: /p:RunWixToolsOutOfProc=true -p:OutputPath=$(Build.BinariesDirectory)\toolchain-msi\ -p:IntermediateOutputPath=$(Build.BinariesDirectory)\toolchain-msi\ -p:DEVTOOLS_ROOT=$(devtools.directory) -p:TOOLCHAIN_ROOT=$(toolchain.directory) -p:INCLUDE_LLDB_PYTHON_SCRIPTS=true -p:HAVE__INTERNAL_SWIFT_SYNTAX_PARSER=true -p:HAVE__INTERNAL_SWIFT_SCAN=true -p:ENABLE_SWIFT_DRIVER=true

      - script: |
          signtool sign /f $(certificate.secureFilePath) /p "$(CERTIFICATE_PASSWORD)" /tr http://timestamp.digicert.com /fd sha256 /td sha256 $(Build.BinariesDirectory)/toolchain-msi/toolchain.msi
        displayName: Sign ${{ parameters.platform }}-toolchain-${{ parameters.proc }}.msi

      - publish: $(Build.BinariesDirectory)/toolchain-msi/toolchain.msi
        artifact: ${{ parameters.platform }}-toolchain-${{ parameters.proc }}.msi
