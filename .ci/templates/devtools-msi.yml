jobs:
  - job: ${{ parameters.host }}

    # NOTE(compnerd) disable non-x64 builds as they are currently broken :(
    condition: eq( '${{ parameters.host }}', 'x64' )

    variables:
      devtools.directory: $(Pipeline.Workspace)/devtools-windows-${{ parameters.host }}/Library/Developer/Toolchains/unknown-Asserts-development.xctoolchain

    steps:
      - ${{ if eq(parameters.USE_PREBUILT_TOOLCHAIN, true) }}:
        - task: DownloadPipelineArtifact@2
          displayName: download devtools
          inputs:
            buildType: specific
            project: 3133d6ab-80a8-4996-ac4f-03df25cd3224
            definition: 7
            buildVersionToDownload: latest
            allowPartiallySucceededBuilds: true
            specificBuildWithTriggering: true
            artifact: devtools-${{ parameters.platform }}-${{ parameters.host }}
            targetPath: $(Pipeline.Workspace)/devtools-${{ parameters.platform }}-${{ parameters.host }}
      - ${{ if not(eq(parameters.USE_PREBUILT_TOOLCHAIN, true)) }}:
        - download: current
          artifact: devtools-${{ parameters.platform }}-${{ parameters.host }}
          displayName: download devtools

      - script: |
          git config --global --add core.autocrlf false
          git config --global --add core.symlinks true
        condition: eq( variables['Agent.OS'], 'Windows_NT' )
        displayName: Enabel symbolic links, disable line ending conversion

      # The checkout list has to match with the windows-sdk.yml checkout list.
      # Otherwise Azure will create different directories for each build.
      - checkout: self
        displayName: checkout compnerd/swift-build

      - checkout: apple/llvm-project
        displayName: checkout apple/llvm-project

      - checkout: apple/swift
        displayName: checkout apple/swift

      - checkout: apple/swift-cmark
        displayName: checkout apple/swift-cmark

      - checkout: apple/swift-corelibs-libdispatch
        displayName: checkout apple/swift-corelibs-libdispatch

      - checkout: apple/swift-corelibs-foundation
        displayName: checkout apple/swift-corelibs-foundation

      - checkout: apple/swift-corelibs-xctest
        displayName: checkout apple/swift-corelibs-xctest

      - checkout: apple/swift-llbuild
        displayName: checkout apple/swift-llbuild

      - checkout: apple/swift-tools-support-core
        displayName: checkout apple/swift-tools-support-core

      - checkout: jpsim/Yams
        displayName: checkout jpsim/Yams

      - checkout: apple/swift-argument-parser
        displayName: checkout apple/swift-argument-parser

      - checkout: apple/swift-driver
        displayName: checkout apple/swift-driver

      - checkout: apple/swift-package-manager
        displayName: checkout apple/swift-package-manager

      - checkout: apple/indexstore-db
        displayName: checkout apple/indexstore-db

      - checkout: apple/sourcekit-lsp
        displayName: checkout apple/sourcekit-lsp

      - ${{ if eq(parameters.TENSORFLOW, true) }}:
        - checkout: tensorflow/swift-apis
          displayName: checkout tensorflow/swift-apis

      - task: BatchScript@1
        condition: eq( variables['Agent.OS'], 'Windows_NT' )
        displayName: VsDevCmd.bat
        inputs:
          filename: C:/Program Files (x86)/Microsoft Visual Studio/${{ parameters.VisualStudio }}/Common7/Tools/VsDevCmd.bat
          arguments: -no_logo -arch=x64 -host_arch=x64
          modifyEnvironment: true

      - task: DownloadSecureFile@1
        name: certificate
        inputs:
          secureFile: dt.compnerd.org.p12

      - task: MSBuild@1
        displayName: ${{ parameters.platform }}-devtools-${{ parameters.proc }}.msi
        inputs:
          solution: $(Build.SourcesDirectory)/swift-build/wix/windows-devtools.wixproj
          msbuildArguments: /p:RunWixToolsOutOfProc=true -p:OutputPath=$(Build.BinariesDirectory)\devtools-msi\ -p:IntermediateOutputPath=$(Build.BinariesDirectory)\sdk-msi\ -p:DEVTOOLS_ROOT=$(devtools.directory) -p:TENSORFLOW=${{ parameters.tensorflow }}

      - script: |
          signtool sign /f $(certificate.secureFilePath) /p $(CERTIFICATE_PASSWORD) /tr http://timestamp.digicert.com /fd sha256 /td sha256 $(Build.BinariesDirectory)/devtools-msi/devtools.msi
        displayName: Sign ${{ parameters.platform }}-devtools-${{ parameters.proc }}.msi

      - publish: $(Build.BinariesDirectory)/devtools-msi/devtools.msi
        artifact: ${{ parameters.platform }}-devtools-${{ parameters.proc }}.msi


