jobs:
  - job: ${{ parameters.platform }}_${{ parameters.host }}
    pool: ${{ parameters.pool }}
    variables:
      sqlite.release: 3280000
      install.directory: $(Build.StagingDirectory)/Library/sqlite-3.28.0
    steps:
      - powershell: |
          Invoke-WebRequest -UseBasicParsing -Uri https://sqlite.org/2019/sqlite-amalgamation-$(sqlite.release).zip -OutFile $(Build.SourcesDirectory)/sqlite-amalgamation-$(sqlite.release).zip
        displayName: 'Download Sources'
      - task: ExtractFiles@1
        inputs:
          archiveFilePatterns: $(Build.SourcesDirectory)/sqlite-amalgamation-$(sqlite.release).zip
          destinationFolder: $(Build.SourcesDirectory)
          cleanDestinationFolder: false
        displayName: 'Extract Sources'
      - task: CopyFiles@2
        inputs:
          SourceFolder: $(Build.SourcesDirectory)/cmake/SQLite
          contents: CMakeLists.txt
          TargetFolder: $(Build.SourcesDirectory)/sqlite-amalgamation-$(sqlite.release)
        displayName: 'Prepare'
      - task: BatchScript@1
        inputs:
          filename: C:/Program Files (x86)/Microsoft Visual Studio/${{ parameters.VisualStudio }}/Common7/Tools/VsDevCmd.bat
          arguments: -no_logo -arch=${{ parameters.host }} -host_arch=x64
          modifyEnvironment: true
        condition: eq( variables['Agent.OS'], 'Windows_NT' )
        displayName: 'vsvarsall.bat'
      - script: |
          wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | sudo apt-key add -
          sudo apt-add-repository 'deb https://apt.kitware.com/ubuntu/ bionic main'
          sudo apt-get update
          sudo apt-get -y install cmake ninja-build
        condition: eq( variables['Agent.OS'], 'Linux' )
        displayName: 'Install Dependencies'
      - task: CMake@1
        inputs:
          workingDirectory: $(Build.StagingDirectory)/sqlite
          cmakeArgs: -C $(Build.SourcesDirectory)/cmake/caches/${{ parameters.platform }}-${{ parameters.arch }}.cmake -G Ninja $(Build.SourcesDirectory)/sqlite-amalgamation-$(sqlite.release) -DCMAKE_BUILD_TYPE=MinSizeRel -DCMAKE_INSTALL_PREFIX=$(install.directory)/usr -DBUILD_SHARED_LIBS=NO
        displayName: 'Configure SQLite3'
      - task: CMake@1
        inputs:
          cmakeArgs: --build $(Build.StagingDirectory)/sqlite
        displayName: 'Build SQLite3'
      - task: CMake@1
        inputs:
          cmakeArgs: --build $(Build.StagingDirectory)/sqlite --target install
        displayName: 'Install SQLite3'
      - task: PublishBuildArtifacts@1
        inputs:
          pathtoPublish: $(Build.StagingDirectory)/Library
          artifactName: sqlite-${{ parameters.platform }}-${{ parameters.host }}
