pr:
  branches:
    include:
      - master
  paths:
    include:
      - .ci/windows-sdk-deb.yml
trigger:
  branches:
    include:
      - master
  paths:
    include:
      - .ci/windows-sdk-deb.yml
jobs:
  - job: windows_x64
    pool:
      vmImage: 'ubuntu-18.04'
    steps:
      - script: |
          mkdir -p $(Build.StagingDirectory)/sdk/Library
        displayName: 'setup'
      - task: DownloadBuildArtifacts@0
        inputs:
          buildType: specific
          project: '3133d6ab-80a8-4996-ac4f-03df25cd3224'
          allowPartiallySucceededBuilds: true
          pipeline: 2
          artifactName: 'sdk-windows-x64'
          downloadPath: '$(System.ArtifactsDirectory)'
        displayName: 'Install x64 SDK'
      - script: |
          mkdir -p $(Build.StagingDirectory)/sdk/Library/Developer/Platforms/Windows.platform/Developer/
          mv $(System.ArtifactsDirectory)/sdk-windows-x64/Developer/Platforms/Windows.platform/Developer/Library $(Build.StagingDirectory)/sdk/Library/Developer/Platforms/Windows.platform/Developer

          rm -rf $(System.ArtifactsDirectory)/sdk-windows-x64/Developer/Platforms/Windows.platform/Developer/SDKs/Windows.sdk/usr/bin
          rm -rf $(System.ArtifactsDirectory)/sdk-windows-x64/Developer/Platforms/Windows.platform/Developer/SDKs/Windows.sdk/usr/share
          rm -rf $(System.ArtifactsDirectory)/sdk-windows-x64/Developer/Platforms/Windows.platform/Developer/SDKs/Windows.sdk/usr/lib/swift/FrameworkABIBaseline

          rsync -val $(System.ArtifactsDirectory)/sdk-windows-x64/Developer $(Build.StagingDirectory)/sdk/Library
        displayName: 'cleanup image'
      - script: |
          cd $(Build.StagingDirectory)
          mkdir sdk/DEBIAN
          cp $(Build.SourcesDirectory)/debian/windows-sdk sdk/DEBIAN/control
          sed -e "s/Version:/& $(Build.BuildId)/" -i sdk/DEBIAN/control
          fakeroot dpkg-deb --build sdk
        displayName: 'package image'
      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.StagingDirectory)/sdk.deb'
          ArtifactName: 'windows-swift-sdk.deb'
        displayName: "Publish windows-swift-sdk.deb"
      - task: cURLUploader@2
        inputs:
          files: '$(Build.StagingDirectory)/sdk.deb'
          authType: 'UserAndPass'
          username: 'compnerd'
          password: '$(BINTRAY_PASSWORD)'
          url: 'https://api.bintray.com/content/compnerd/swift/swift-windows-sdk/$(Build.BuildId)/swift-windows-sdk_$(Build.BuildId)_amd64.deb;deb_distribution=bionic;deb_component=main;deb_architecture=amd64;publish=1'
          remotePath: 
        displayName: 'upload to bintray'
