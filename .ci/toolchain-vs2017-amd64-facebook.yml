pr:
  branches:
    include:
      - master
  paths:
    include:
      - .ci/azure-pipelines-aws-agent.yml
      - .ci/templates/toolchain.yml
trigger:
  branches:
    include:
      - master
  paths:
    include:
      - .ci/azure-pipelines-aws-agent.yml
      - .ci/templates/toolchain.yml
jobs:
  - job: windows_x64
    timeoutInMinutes: 120
    pool: Facebook-VS2017
    variables:
      arch: x86_64
      host: x64
      platform: windows

      triple: x86_64-unknown-windows-msvc

      install.directory: $(Build.StagingDirectory)/Library/Developer/Toolchains/unknown-Asserts-development.xctoolchain/usr

      icu.version : 64
      icu.directory: $(System.ArtifactsDirectory)/icu-$(platform)-$(host)/ICU-$(icu.version)

      llvm.extra_cmake_flags: -DLLVM_PARALLEL_LINK_JOBS=2
      swift.extra_cmake_flags: -DSWIFT_WINDOWS_x86_64_ICU_UC_INCLUDE=$(icu.directory)/usr/include/unicode -DSWIFT_WINDOWS_x86_64_ICU_UC=$(icu.directory)/usr/lib/icuuc$(icu.version).lib -DSWIFT_WINDOWS_x86_64_ICU_I18N_INCLUDE=$(icu.directory)/usr/include -DSWIFT_WINDOWS_x86_64_ICU_I18N=$(icu.directory)/usr/lib/icuin$(icu.version).lib -DSWIFT_PARALLEL_LINK_JOBS=8 -DSWIFT_BUILD_DYNAMIC_STDLIB=YES -DSWIFT_BUILD_DYNAMIC_SDK_OVERLAY=YES
      lldb.extra_cmake_flags: -DLLDB_DISABLE_PYTHON=YES

      visualstudio.version: 2017
    steps:
    - task: BatchScript@1
      inputs:
        filename: C:\Program Files (x86)\Microsoft Visual Studio\$(visualstudio.version)\Community\Common7\Tools\VsDevCmd.bat
        arguments: -no_logo -arch=x64 -host_arch=x64
        modifyEnvironment: true
      displayName: 'vcvarsall.bat'
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '2.7.x'
    - script: |
        echo "##vso[task.setvariable variable=PATH]$(install.directory)/bin;%PATH%"
      displayName: 'Update PATH'
    # TODO(compnerd) figure out how to account for patches to these files
    - script: |
        curl -L "https://raw.githubusercontent.com/apple/swift/master/stdlib/public/Platform/ucrt.modulemap" -o "%UniversalCRTSdkDir%/Include/%UCRTVersion%/ucrt/module.modulemap"
        curl -L "https://raw.githubusercontent.com/apple/swift/master/stdlib/public/Platform/visualc.modulemap" -o "%VCToolsInstallDir%/include/module.modulemap"
        curl -L "https://raw.githubusercontent.com/apple/swift/master/stdlib/public/Platform/visualc.apinotes" -o "%VCToolsInstallDir%/include/visualc.apinotes"
        curl -L "https://raw.githubusercontent.com/apple/swift/master/stdlib/public/Platform/winsdk.modulemap" -o "%UniversalCRTSdkDir%/Include/%UCRTVersion%/um/module.modulemap"
      displayName: 'Configure SDK'
    - task: DownloadBuildArtifacts@0
      inputs:
        buildType: specific
        project: '3133d6ab-80a8-4996-ac4f-03df25cd3224'
        allowPartiallySucceededBuilds: true
        pipeline: 9
        artifactName: 'icu-$(platform)-$(host)'
        downloadPath: '$(Build.StagingDirectory)'
      displayName: 'Install ICU'
    - template: templates/toolchain.yml
    - script: |
        echo ##vso[task.setvariable variable=PATH]$(icu.directory)/usr/bin;$(install.directory)\bin;$(Build.StagingDirectory)\swift\libdispatch-prefix\bin;%PATH%;%ProgramFiles%\Git\usr\bin
      displayName: 'Update PATH'
    - task: CMake@1
      inputs:
        cmakeArgs: --build $(Build.StagingDirectory)\toolchain --target check-swift
      displayName: 'test swift'
      continueOnError: true
    - task: PublishTestResults@2
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: '$(Build.StagingDirectory)/toolchain/swift-test-results/*/*.xml'
